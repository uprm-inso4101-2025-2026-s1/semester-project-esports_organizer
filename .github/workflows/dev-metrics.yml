name: Daily Project Metrics Generation

on:
  schedule:
    - cron: "0 0 * * *" # Runs at 00:00 UTC every day
  workflow_dispatch: # Allows manual trigger from the GitHub UI

jobs:
  generate_and_commit_metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      # 1) Try to checkout the metrics branch (keep its files in workspace)
      - name: Checkout metrics branch (or create it)
        shell: bash
        run: |
          set -euxo pipefail
          # Checkout default branch first just to have a repo
          git init .
          git remote add origin "https://github.com/${GITHUB_REPOSITORY}.git"
          git fetch --depth=1 origin
          # Try to checkout existing metrics branch; if missing, create from default
          if git ls-remote --heads origin inso-metrics | grep -q inso-metrics; then
            git fetch origin inso-metrics:inso-metrics
            git checkout inso-metrics
          else
            # detect default branch
            DEFAULT_BRANCH=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
            git checkout -b inso-metrics origin/${DEFAULT_BRANCH}
          fi

      - name: Checkout INSO GH Metrics code
        uses: actions/checkout@v4
        with:
          repository: Poggecci/INSO-GH-API-QUERY
          path: inso-gh-query-metrics

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: |
          cd inso-gh-query-metrics
          poetry install
        shell: bash

      - name: Run metrics generator
        run: |
          cd inso-gh-query-metrics
          poetry run python src/generateMilestoneMetricsForActions.py ${{ github.workspace }}/gh_metrics_config.json
        shell: bash
        env:
          GITHUB_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
          ORGANIZATION: ${{ github.repository_owner }}

      - name: Move Generated Metrics to Source Repo
        run: |
          set -euxo pipefail
          mkdir -p ./metrics
          # Copy the new files into the existing metrics folder without nuking old ones
          cp inso-gh-query-metrics/*${{ github.repository_owner }}.md metrics/ || true
        shell: bash

      - name: Auto Commit Results
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[Automated] Milestone Metrics Update"
          branch: inso-metrics
          file_pattern: metrics/*.md
          commit_user_name: GitHub Action
          commit_user_email: action@github.com
          commit_author: GitHub Action <action@github.com>
          # IMPORTANT: do NOT force push, do NOT create_branch here

      - name: Create Pull Request
        run: |
          gh pr create --base ${{ github.ref }} --head "inso-metrics" --title "[Automated] Milestone Metrics Update" --body "This is an automated pull request to update the milestone metrics." --repo ${{ github.repository }} || echo "Command failed: Unable to create pull request. It might be due to the branch already existing or lack of permissions."
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
